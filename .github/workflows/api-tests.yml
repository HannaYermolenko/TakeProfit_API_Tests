name: API Tests CI/CD

on:
  workflow_dispatch:
    inputs:
      testTask:
        description: 'Test task to run (smoke or bots)'
        required: true
        default: 'smoke'

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      EMAIL_GET_TOKEN: ${{ secrets.EMAIL_GET_TOKEN }}
      PASSWORD_GET_TOKEN: ${{ secrets.PASSWORD_GET_TOKEN }}
      API_KEY_EXCHANGE: ${{ secrets.API_KEY_EXCHANGE }}
      SECRET_EXCHANGE: ${{ secrets.SECRET_EXCHANGE }}

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '18'

      # 3. Make gradlew executable
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      # 4. Run Tests
      - name: Run Tests
        run: |
          ./gradlew clean ${{ github.event.inputs.testTask }} \
          -Pemail=$EMAIL_GET_TOKEN \
          -Ppassword=$PASSWORD_GET_TOKEN \
          -PapiKeyExchange=$API_KEY_EXCHANGE \
          -PsecretExchange=$SECRET_EXCHANGE

      # 5. Generate Allure Report
      - name: Generate Allure Report
        run: ./gradlew allureReport

      # 6. Verify Allure Report Exists
      - name: Check Allure Report
        run: |
          if [ ! -d "build/reports/allure-report" ]; then
            echo "Allure report not found. Ensure the report is generated correctly.";
            exit 1;
          fi

      # 7. Commit and Push Allure Report to `allure-reports` branch
      - name: Commit and Push Allure Report to `allure-reports` branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Переключаемся на ветку allure-reports, создаём её, если нужно
          git fetch origin allure-reports
          git checkout allure-reports

          # Создаём уникальную директорию для нового отчёта
          REPORT_DIR="reports/${{ github.event.inputs.testTask }}/$(date +'%Y%m%d_%H%M%S')"
          mkdir -p $REPORT_DIR
          cp -r build/reports/allure-report/* $REPORT_DIR/

          # Добавляем и пушим новые отчёты
          git add $REPORT_DIR
          git commit -m "Add Allure Report for ${{ github.event.inputs.testTask }}: $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin allure-reports
