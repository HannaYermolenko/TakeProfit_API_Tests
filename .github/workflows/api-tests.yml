name: API Tests CI/CD

on:
  # Автоматический запуск для smoke при обновлении main
  # push:
  #   branches: [main]
  # Ручной запуск с выбором задачи
  workflow_dispatch:
    inputs:
      testTask:
        description: 'Test task to run (smoke or regressive)'
        required: true
        default: 'smoke'
        type: choice
        options:
          - 'smoke'
          - 'regressive'
jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      EMAIL_GET_TOKEN: ${{ secrets.EMAIL_GET_TOKEN }}
      PASSWORD_GET_TOKEN: ${{ secrets.PASSWORD_GET_TOKEN }}
      API_KEY_EXCHANGE: ${{ secrets.API_KEY_EXCHANGE }}
      SECRET_EXCHANGE: ${{ secrets.SECRET_EXCHANGE }}

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '18'
      - name: ❎ ⌛ Check Java version
        run: java -version
      - name: ❎ ⌛ Check JVM version
        run: echo $JAVA_HOME
      - name: ❎ ⌛ Check Java Core version
        run: javac -version

      # 3. Make gradlew executable
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew
      - name: ❎ ⌛ Check Gradle version
        run: ./gradlew --version
      - name: ✅ 🚿 Clean Gradle build
        run: ./gradlew clean
      - name: ✅ ⚙️ Install Allure
        run: npm install -g allure-commandline
      - name: ❎ ⌛ Check Allure version
        run: allure --version
        
      - name: Check Test Suites
        run: ls -la src/test/resources/suites/
      - name: Run Smoke Tests
        if: github.event.inputs.command == 'smoke'
        run: ./gradlew clean smoke -Pemail=$EMAIL_GET_TOKEN -Ppassword=$PASSWORD_GET_TOKEN -PapiKeyExchange=$API_KEY_EXCHANGE -PsecretExchange=$SECRET_EXCHANGE clean build > build.log 2>&1 || true
      - name: Run Regressive Tests
        if: github.event.inputs.command == 'regressive'
        run: |
          ./gradlew clean regressive \
          -Pemail=$EMAIL_GET_TOKEN \
          -Ppassword=$PASSWORD_GET_TOKEN \
          -PapiKeyExchange=$API_KEY_EXCHANGE \
          -PsecretExchange=$SECRET_EXCHANGE \
          clean build > build.log 2>&1 || true
          
      - name: ✅ 📦 Archive [Gradle build log]
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gradle-build-log.zip
          path: build.log

      - name: ✅ 📦 Archive [test results]
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gradle-results.zip
          path: |
            build/reports/tests/test/*

      - name: ✅ 📦 Archive [Allure attachments for failed tests]
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-attachments for failed tests.zip
          path: |
            src/test_logs/*

      - name: ✅ 🤖 Build allure report on gh-pages
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      - name: ✅ 💻 Publish test report
        uses: peaceiris/actions-gh-pages@v4.0.0
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
