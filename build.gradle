plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2' // Подключение плагина Allure
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'org.testng:testng:7.10.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.14'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '5.5.0'
    implementation 'com.opencsv:opencsv:5.7.1'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    testImplementation 'io.qameta.allure:allure-testng:2.21.0'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.21.0'
}

test {
    useTestNG()
    // Указание директории для хранения результатов Allure
    // systemProperty "allure.results.directory", "build/allure-results"
    finalizedBy 'allureReport'
}
allureReport {
    dependsOn test
    reportDir = file('build/allure-report')
}

def registerTask(String taskName, String suitePath){
    tasks.register(taskName, Test){
        useTestNG(){
            suites suitePath
        }
        // Указание директории для хранения результатов Allure для каждой задачи
        systemProperty "allure.results.directory", "build/allure-results"
    }
}

registerTask('smoke','src/test/resources/suites/smoke.xml')
registerTask('bots','src/test/resources/suites/bots.xml')
